// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using warren_analysis_desk;

#nullable disable

namespace warren_analysis_desk.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250204125146_v11")]
    partial class v11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("warren_analysis_desk.News", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("ChatGPTMsg")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("EndExecution")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HtmlList")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RobotKeysId")
                        .HasColumnType("int");

                    b.Property<string>("RobotName")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartExecution")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RobotKeysId");

                    b.HasIndex(new[] { "Title" }, "idx_title");

                    b.ToTable("News");
                });

            modelBuilder.Entity("warren_analysis_desk.RobotKeys", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("KeyName")
                        .HasColumnType("longtext");

                    b.Property<string>("RobotKeysList")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("robot_keys");
                });

            modelBuilder.Entity("warren_analysis_desk.SlackMessages", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("BlockIds")
                        .HasColumnType("longtext");

                    b.Property<string>("MessageId")
                        .HasColumnType("longtext");

                    b.Property<string>("NewsId")
                        .HasColumnType("longtext");

                    b.Property<int?>("NewsId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewsId1");

                    b.ToTable("slack_messages");
                });

            modelBuilder.Entity("warren_analysis_desk.News", b =>
                {
                    b.HasOne("warren_analysis_desk.RobotKeys", "RobotKeys")
                        .WithMany("News")
                        .HasForeignKey("RobotKeysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RobotKeys");
                });

            modelBuilder.Entity("warren_analysis_desk.SlackMessages", b =>
                {
                    b.HasOne("warren_analysis_desk.News", "News")
                        .WithMany()
                        .HasForeignKey("NewsId1");

                    b.Navigation("News");
                });

            modelBuilder.Entity("warren_analysis_desk.RobotKeys", b =>
                {
                    b.Navigation("News");
                });
#pragma warning restore 612, 618
        }
    }
}
